{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97254\\\\Desktop\\\\FullStack\\\\Git\\\\myfirstreact\\\\reactproject\\\\src\\\\Components\\\\Pages\\\\Sign-In\\\\content.js\";\nimport React from 'react'; // import Formitem from '../../General/formitem.js'\n// import Button from 'react-bootstrap/Button';\n\nimport Input from \"../../General/Form/input\";\nimport Button from \"../../General/Form/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignInForm extends React.Component {\n  //   render() {\n  //     return (\n  //       <div className=\"container-fluid\">\n  //         <h2 className=\"text-center\">Sign In</h2>\n  //         <form className=\"SignInForm mx-auto\">\n  //           <div className=\"form-group\">\n  //               <label>Email address</label>\n  //               <input required type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n  //           </div>\n  //           <div className=\"form-group\">\n  //               <label>Password</label>\n  //               <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" required/>\n  //           </div>\n  //           <div className=\"form-group\">\n  //               <div className=\"custom-control custom-checkbox\">\n  //                   <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n  //                   <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n  //               </div>\n  //           </div>\n  //           <Button href=\"/personal\" className=\"btn btn-dark btn-block\">Submit</Button>\n  //           <p className=\"forgot-password \">\n  //               <a href=\"#\">Forgot password?</a>\n  //           </p>\n  //           <p className=\"sign-up\">\n  //               Don't have an account ? <a href=\"#\">sign-up</a>\n  //           </p>\n  //       </form>\n  //     </div>\n  //   )\n  // }\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        username: \"\",\n        password: \"\"\n      }\n    };\n    this.handleUsername = this.handleUsername.bind(this);\n    this.handleAge = this.handleAge.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n  /* This lifecycle hook gets executed when the component mounts */\n\n\n  handleUsername(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        username: value\n      }\n    }));\n  }\n\n  handleAge(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        age: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        [name]: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleTextArea(e) {\n    console.log(\"Inside handleTextArea\");\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        about: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleCheckBox(e) {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n\n    if (this.state.newUser.skills.indexOf(newSelection) > -1) {\n      newSelectionArray = this.state.newUser.skills.filter(s => s !== newSelection);\n    } else {\n      newSelectionArray = [...this.state.newUser.skills, newSelection];\n    }\n\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        skills: newSelectionArray\n      }\n    }));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.newUser;\n    fetch(\"http://example.com\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      newUser: {\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n        skills: [],\n        about: \"\"\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"container-fluid\",\n        onSubmit: this.handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          inputType: \"text\",\n          title: \"Username\",\n          name: \"username\",\n          value: this.state.newUser.username,\n          placeholder: \"Enter your username\",\n          handleChange: this.handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Input, {\n          inputType: \"text\",\n          title: \"Password\",\n          name: \"Password\",\n          value: this.state.newUser.Password,\n          placeholder: \"Enter your Password\",\n          handleChange: this.handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          action: this.handleFormSubmit,\n          type: \"primary\",\n          title: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sign-up\",\n        children: [\"Don't have an account ? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"sign-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SignInForm;","map":{"version":3,"sources":["C:/Users/97254/Desktop/FullStack/Git/myfirstreact/reactproject/src/Components/Pages/Sign-In/content.js"],"names":["React","Input","Button","SignInForm","Component","constructor","props","state","newUser","username","password","handleUsername","bind","handleAge","handleFormSubmit","e","value","target","setState","prevState","age","console","log","handleInput","name","handleTextArea","about","handleCheckBox","newSelection","newSelectionArray","skills","indexOf","filter","s","preventDefault","userData","fetch","method","body","JSON","stringify","headers","Accept","then","response","json","data","handleClearForm","gender","render","Password"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import Formitem from '../../General/formitem.js'\r\n// import Button from 'react-bootstrap/Button';\r\nimport Input from \"../../General/Form/input\";\r\nimport Button from \"../../General/Form/button\";\r\n\r\nclass SignInForm extends React.Component{\r\n  //   render() {\r\n  //     return (\r\n  //       <div className=\"container-fluid\">\r\n  //         <h2 className=\"text-center\">Sign In</h2>\r\n  //         <form className=\"SignInForm mx-auto\">\r\n  //           <div className=\"form-group\">\r\n  //               <label>Email address</label>\r\n  //               <input required type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n  //           </div>\r\n\r\n  //           <div className=\"form-group\">\r\n  //               <label>Password</label>\r\n  //               <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" required/>\r\n  //           </div>\r\n\r\n  //           <div className=\"form-group\">\r\n  //               <div className=\"custom-control custom-checkbox\">\r\n  //                   <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n  //                   <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n  //               </div>\r\n  //           </div>\r\n\r\n  //           <Button href=\"/personal\" className=\"btn btn-dark btn-block\">Submit</Button>\r\n  //           <p className=\"forgot-password \">\r\n  //               <a href=\"#\">Forgot password?</a>\r\n  //           </p>\r\n  //           <p className=\"sign-up\">\r\n  //               Don't have an account ? <a href=\"#\">sign-up</a>\r\n  //           </p>\r\n  //       </form>\r\n  //     </div>\r\n  //   )\r\n  // }\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newUser: {\r\n        username: \"\",\r\n        password: \"\"\r\n      },\r\n\r\n    };\r\n    this.handleUsername = this.handleUsername.bind(this);\r\n    this.handleAge = this.handleAge.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  /* This lifecycle hook gets executed when the component mounts */\r\n\r\n  handleUsername(e) {\r\n    let value = e.target.value;\r\n    this.setState(\r\n      prevState => ({\r\n        newUser: {\r\n          ...prevState.newUser,\r\n          username: value\r\n        }\r\n      }),\r\n    );\r\n  }\r\n\r\n  handleAge(e) {\r\n    let value = e.target.value;\r\n    this.setState(\r\n      prevState => ({\r\n        newUser: {\r\n          ...prevState.newUser,\r\n          age: value\r\n        }\r\n      }),\r\n      () => console.log(this.state.newUser)\r\n    );\r\n  }\r\n\r\n  handleInput(e) {\r\n    let value = e.target.value;\r\n    let name = e.target.name;\r\n    this.setState(\r\n      prevState => ({\r\n        newUser: {\r\n          ...prevState.newUser,\r\n          [name]: value\r\n        }\r\n      }),\r\n      () => console.log(this.state.newUser)\r\n    );\r\n  }\r\n\r\n  handleTextArea(e) {\r\n    console.log(\"Inside handleTextArea\");\r\n    let value = e.target.value;\r\n    this.setState(\r\n      prevState => ({\r\n        newUser: {\r\n          ...prevState.newUser,\r\n          about: value\r\n        }\r\n      }),\r\n      () => console.log(this.state.newUser)\r\n    );\r\n  }\r\n\r\n  handleCheckBox(e) {\r\n    const newSelection = e.target.value;\r\n    let newSelectionArray;\r\n\r\n    if (this.state.newUser.skills.indexOf(newSelection) > -1) {\r\n      newSelectionArray = this.state.newUser.skills.filter(\r\n        s => s !== newSelection\r\n      );\r\n    } else {\r\n      newSelectionArray = [...this.state.newUser.skills, newSelection];\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      newUser: { ...prevState.newUser, skills: newSelectionArray }\r\n    }));\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault();\r\n    let userData = this.state.newUser;\r\n\r\n    fetch(\"http://example.com\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(userData),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }).then(response => {\r\n      response.json().then(data => {\r\n        console.log(\"Successful\" + data);\r\n      });\r\n    });\r\n  }\r\n\r\n  handleClearForm(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      newUser: {\r\n        name: \"\",\r\n        age: \"\",\r\n        gender: \"\",\r\n        skills: [],\r\n        about: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\r\n          <Input\r\n            inputType={\"text\"}\r\n            title={\"Username\"}\r\n            name={\"username\"}\r\n            value={this.state.newUser.username}\r\n            placeholder={\"Enter your username\"}\r\n            handleChange={this.handleInput}\r\n          />{\" \"}\r\n          {/* Username of the user */}\r\n\r\n          <Input\r\n            inputType={\"text\"}\r\n            title={\"Password\"}\r\n            name={\"Password\"}\r\n            value={this.state.newUser.Password}\r\n            placeholder={\"Enter your Password\"}\r\n            handleChange={this.handleInput}\r\n          />{\" \"}\r\n          {/* Username of the user */}\r\n\r\n\r\n          <Button\r\n            action={this.handleFormSubmit}\r\n            type={\"primary\"}\r\n            title={\"Submit\"}\r\n          />{\" \"}\r\n          {/*Submit */}\r\n          \r\n        </form>\r\n        <p className=\"sign-up\">\r\n          Don't have an account ? <a href=\"/signup\">sign-up</a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SignInForm;\r\n"]},"metadata":{},"sourceType":"module"}